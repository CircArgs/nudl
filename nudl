#!/usr/bin/env python3
"""
nudl compiler
write cuda in pure nim
"""
import sys
import os
sys.path.insert(0, os.path.split(__file__)[0])
import subprocess
import re
import shutil
from nudl_python.utils import run, get_cache_dir, get_nim_file, write_nudl_cache_env

nim_cmd = """nim c --nimcache:$PWD/nudl_cache -d:release --cc:gcc --gcc.exe: "$PWD/nudlcc" --gcc.linkerexe: "$PWD/nudlcc" --gcc.cpp.options.debug: "-Xcompiler -Og" --gcc.cpp.options.speed: "-Xcompiler -O3" --gcc.cpp.options.size: "-Xcompiler -Os"  """


if __name__ == "__main__":
    cmd = ' '.join(sys.argv[1:])
    nim_input_file = os.path.abspath(run(f"echo {get_nim_file(cmd)}"))
    cmd = nim_cmd.replace("FILE", nim_input_file) + cmd
    nim_cache_dir = os.path.abspath(run(f"echo {get_cache_dir(cmd)}"))
    try:
        shutil.rmtree(nim_cache_dir)
    except FileNotFoundError:
        pass
    write_nudl_cache_env(nim_input_file=nim_input_file, nim_cache_dir=nim_cache_dir, command=cmd)
    run(cmd.replace("CACHE", nim_cache_dir))
